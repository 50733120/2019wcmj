<h1>簡介</h1>
<p>首先是這個衝突 (這是新版本內容)</p>
<p>終於要來處理衝突了 (這是產生衝突的舊版本內容)</p>
<p>CMSimfly (<a href="https://github.com/chiamingyen/cmsimfly">https://github.com/chiamingyen/cmsimfly)</a> 是一套簡單的網際內容管理系統, 採用 Flask 網際框架, 以 Beautifulsoup 解讀分頁內容.</p>
<p><img alt="" height="471" src="/images/gocycle4.png" width="587"/></p>
<h1>week1</h1>
<p>學習如何一次上傳多個圖檔, 並且學會如何引用, 並且設定圖片大小.</p>
<p><img alt="" height="471" src="/images/gocycle4.png" width="587"/></p>
<p></p>
<h1>week2</h1>
<p>網路與電腦程式只是工具, 任何人希望與遠端的系統或成員溝通, 可以使用網路.</p>
<p>任何人想要利用電腦的能力解決問題, 就必須學會編寫電腦程式, 與電腦溝通.</p>
<p></p>
<h1>week3</h1>
<p>根據 <a href="https://2019wcm.blogspot.com/2019/03/ungit.html">https://2019wcm.blogspot.com/2019/03/ungit.html</a> 的設定, 完成 ungit 配置.</p>
<h1>git http 與 ssh</h1>
<p>利用 ssh 對 git 改版, 必須使用  home/.ssh/config 設定, 才能透過 proxy 伺服器進行連線, 由於在 IPv6 環境下, 必須要透過 proxy 才能對 Git 連線, 因此若無 config, 無法對遠端改版</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">ProxyCommand y:/PortableGit/mingw64/bin/connect.exe -H 140.130.17.53:3128 %h %p

Host github.com
User git
Port 22
Hostname github.com

IdentityFile "y:\home\.ssh\id_rsa"

TCPKeepAlive yes
IdentitiesOnly yes

Host ssh.github.com
User git
Port 443
Hostname ssh.github.com

IdentityFile "y:\home\.ssh\id_rsa"

TCPKeepAlive yes
IdentitiesOnly yes</pre>
<h1>期中影片</h1>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/vyz6PUcxMvg" width="560"></iframe></p>
<h1>小遊戲</h1>
<script type="text/javascript">
var cwidth = 400;
    var cheight = 300;
    var dicex = 50;
    var dicey = 50;
    var dicewidth = 100;
    var diceheight = 100;
    var dotrad = 6;
    var ctx;
    var dx;
    var dy;
    var firstturn = true;
    var point;
function throwdice() {
    var sum;
    var ch = 1+Math.floor(Math.random()*6);
    sum = ch;
    dx = dicex;
    dy = dicey;
    drawface(ch);
    dx = dicex + 150;
    ch=1 + Math.floor(Math.random()*6);
    sum += ch;
    drawface(ch);
    if (firstturn) {
        switch(sum) {
            case 7:
            case 11:
              document.f.outcome.value="You win!";
              break;
            case 2:
            case 3:
            case 12:
              document.f.outcome.value="You lose!";
              break;
            default:
              point = sum;
              document.f.pv.value=point;
              firstturn = false;
              document.f.stage.value="Need follow-up throw.";
              document.f.outcome.value="   ";
        }
    }
    else {
        switch(sum) {
        case point:
           document.f.outcome.value="You win!";
           document.f.stage.value="Back to first throw.";
           document.f.pv.value=" ";
           firstturn = true;
           break;
        case 7:
           document.f.outcome.value="You lose!";
           document.f.stage.value="Back to first throw.";
           document.f.pv.value=" ";
           firstturn = true;
        }
            }
}
function drawface(n) {
  ctx = document.getElementById('canvas').getContext('2d'); 
  ctx.lineWidth = 5;
  ctx.clearRect(dx,dy,dicewidth,diceheight);
  ctx.strokeRect(dx,dy,dicewidth,diceheight)
  var dotx;
  var doty;
  ctx.fillStyle = "#009966";
    switch(n) {
        case 1:
         draw1();
         break;
        case 2:
         draw2();
         break;
        case 3:
         draw2();
         draw1();
         break;
        case 4:
         draw4();
         break;
        case 5:
         draw4();
         draw1();
         break;
        case 6:
         draw4();
         draw2mid();
         break;
         
    }
}
function draw1() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + .5*dicewidth;
    doty = dy + .5*diceheight;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
}
function draw2() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + 3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy+diceheight-3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
}
function draw4() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + 3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy+diceheight-3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + diceheight-3*dotrad;  //no change
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy+ 3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
}
function draw2mid() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + .5*diceheight;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy + .5*diceheight; //no change
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
}
</script>
<p><canvas height="300" id="canvas" width="400"> Your browser doesn't support the HTML5 element canvas. </canvas> <br/> <button onclick="throwdice();">Throw dice </button></p>
<form id="f" name="f">Stage: <input name="stage" type="text" value="First Throw"/> Point: <input name="pv" type="text" value="   "/> Outcome: <input name="outcome" type="text" value="     "/></form>
<h1>產生亂數</h1>
<p><button onclick="myFunction()">哥哥不要啦!~~</button></p>
<p id="demo"></p>
<script>
function myFunction() {
  document.getElementById("demo").innerHTML = Math.floor(Math.random()*50 + 1);
  //document.getElementById("demo").innerHTML = "不要亂按";
 //alert("不要亂按")
}
</script>
<h1>rog2 flag</h1>
<!-- 導入 Brython 標準程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<p></p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){

// 設定 data/py 為共用程式路徑

brython({debug:1, pythonpath:['./../data/py']});

}
</script>
</p>
<p><canvas height="400" id="plotarea" width="600"></canvas></p>
<p>
<script type="text/python">
# 導入 doc

from browser import document as doc

import math



# 準備繪圖畫布

canvas = doc["plotarea"]

ctx = canvas.getContext("2d")

# 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點

# ctx.setTransform(1, 0, 0, -1, 0, canvas.height)

# 以下採用 canvas 原始座標繪圖

flag_w = canvas.width

flag_h = canvas.height

circle_x = flag_w/4

circle_y = flag_h/4

# 先畫滿地紅

ctx.fillStyle='rgb(255, 0, 0)'

ctx.fillRect(0,0,flag_w,flag_h)

# 再畫青天

ctx.fillStyle='rgb(0, 0, 150)'

ctx.fillRect(0,0,flag_w/2,flag_h/2)

# 畫十二道光芒白日

ctx.beginPath()

star_radius = flag_w/8

angle = 0

for i in range(24):

    angle += 5*math.pi*2/12

    toX = circle_x + math.cos(angle)*star_radius

    toY = circle_y + math.sin(angle)*star_radius

    # 只有 i 為 0 時移動到 toX, toY, 其餘都進行 lineTo

    if (i):

        ctx.lineTo(toX, toY)

    else:

        ctx.moveTo(toX, toY)

ctx.closePath()

# 將填色設為白色

ctx.fillStyle = '#fff'

ctx.fill()

# 白日:藍圈

ctx.beginPath()

ctx.arc(circle_x, circle_y, flag_w*17/240, 0, math.pi*2, True)

ctx.closePath()

# 填色設為藍色

ctx.fillStyle = 'rgb(0, 0, 149)'

ctx.fill()

# 白日:白心

ctx.beginPath()

ctx.arc(circle_x, circle_y, flag_w/16, 0, math.pi*2, True)

ctx.closePath()

# 填色設為白色

ctx.fillStyle = '#fff'

ctx.fill()
</script>
</p>
<h1>rog flag</h1>
<!-- 導入 Brython 標準程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<p></p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){

// 設定 data/py 為共用程式路徑

brython({debug:1, pythonpath:['./../data/py']});

}
</script>
</p>
<p><canvas height="400" id="plotarea" width="600"></canvas></p>
<p>
<script type="text/python">
# 導入 doc

from browser import document as doc

import math



# 準備繪圖畫布

canvas = doc["plotarea"]

ctx = canvas.getContext("2d")

# 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點

# ctx.setTransform(1, 0, 0, -1, 0, canvas.height)

# 以下採用 canvas 原始座標繪圖

flag_w = canvas.width

flag_h = canvas.height

circle_x = flag_w/4

circle_y = flag_h/4

# 先畫滿地紅

ctx.fillStyle='rgb(255, 0, 0)'

ctx.fillRect(0,0,flag_w,flag_h)

# 再畫青天

ctx.fillStyle='rgb(0, 0, 150)'

ctx.fillRect(0,0,flag_w/2,flag_h/2)

# 畫十二道光芒白日

ctx.beginPath()

star_radius = flag_w/8

angle = 0

for i in range(24):

    angle += 5*math.pi*2/12

    toX = circle_x + math.cos(angle)*star_radius

    toY = circle_y + math.sin(angle)*star_radius

    # 只有 i 為 0 時移動到 toX, toY, 其餘都進行 lineTo

    if (i):

        ctx.lineTo(toX, toY)

    else:

        ctx.moveTo(toX, toY)

ctx.closePath()

# 將填色設為白色

ctx.fillStyle = '#fff'

ctx.fill()

# 白日:藍圈

ctx.beginPath()

ctx.arc(circle_x, circle_y, flag_w*17/240, 0, math.pi*2, True)

ctx.closePath()

# 填色設為藍色

ctx.fillStyle = 'rgb(0, 0, 149)'

ctx.fill()

# 白日:白心

ctx.beginPath()

ctx.arc(circle_x, circle_y, flag_w/16, 0, math.pi*2, True)

ctx.closePath()

# 填色設為白色

ctx.fillStyle = '#fff'

ctx.fill()
</script>
</p>